// Generated by view binder compiler. Do not edit!
package org.hyperskill.musicplayer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.hyperskill.musicplayer.R;

public final class MainPlayerControllerFragmentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button controllerBtnPlayPause;

  @NonNull
  public final Button controllerBtnStop;

  @NonNull
  public final SeekBar controllerSeekBar;

  @NonNull
  public final TextView controllerTvCurrentTime;

  @NonNull
  public final TextView controllerTvTotalTime;

  @NonNull
  public final LinearLayout linear1;

  private MainPlayerControllerFragmentBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button controllerBtnPlayPause, @NonNull Button controllerBtnStop,
      @NonNull SeekBar controllerSeekBar, @NonNull TextView controllerTvCurrentTime,
      @NonNull TextView controllerTvTotalTime, @NonNull LinearLayout linear1) {
    this.rootView = rootView;
    this.controllerBtnPlayPause = controllerBtnPlayPause;
    this.controllerBtnStop = controllerBtnStop;
    this.controllerSeekBar = controllerSeekBar;
    this.controllerTvCurrentTime = controllerTvCurrentTime;
    this.controllerTvTotalTime = controllerTvTotalTime;
    this.linear1 = linear1;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MainPlayerControllerFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MainPlayerControllerFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.main_player_controller_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MainPlayerControllerFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.controllerBtnPlayPause;
      Button controllerBtnPlayPause = ViewBindings.findChildViewById(rootView, id);
      if (controllerBtnPlayPause == null) {
        break missingId;
      }

      id = R.id.controllerBtnStop;
      Button controllerBtnStop = ViewBindings.findChildViewById(rootView, id);
      if (controllerBtnStop == null) {
        break missingId;
      }

      id = R.id.controllerSeekBar;
      SeekBar controllerSeekBar = ViewBindings.findChildViewById(rootView, id);
      if (controllerSeekBar == null) {
        break missingId;
      }

      id = R.id.controllerTvCurrentTime;
      TextView controllerTvCurrentTime = ViewBindings.findChildViewById(rootView, id);
      if (controllerTvCurrentTime == null) {
        break missingId;
      }

      id = R.id.controllerTvTotalTime;
      TextView controllerTvTotalTime = ViewBindings.findChildViewById(rootView, id);
      if (controllerTvTotalTime == null) {
        break missingId;
      }

      id = R.id.linear1;
      LinearLayout linear1 = ViewBindings.findChildViewById(rootView, id);
      if (linear1 == null) {
        break missingId;
      }

      return new MainPlayerControllerFragmentBinding((ConstraintLayout) rootView,
          controllerBtnPlayPause, controllerBtnStop, controllerSeekBar, controllerTvCurrentTime,
          controllerTvTotalTime, linear1);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
